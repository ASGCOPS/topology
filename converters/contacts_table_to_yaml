#!/usr/bin/env python3
from argparse import ArgumentParser, FileType
import csv
import hashlib
import re
import sys

import anymarkup


def email_to_id(email: str) -> str:
    return hashlib.sha1(email.strip().lower().encode()).hexdigest()


def trim_space(s: str) -> str:
    """Remove leading and trailing whitespace but not newlines"""
    # leading and trailing whitespace causes "\n"'s in the resulting string
    ret = re.sub(r"(?m)[ \t]+$", "", s)
    ret = re.sub(r"(?m)^[ \t]+", "", ret)
    return ret


def main():
    parser = ArgumentParser()
    parser.add_argument("infile", type=FileType('r'))
    parser.add_argument("outfile", nargs='?', default=None)
    args = parser.parse_args()

    users = {}
    reader = csv.DictReader(args.infile, dialect="excel-tab")
    for r_in in reader:
        r = {k: trim_space(re.sub(r"\\n", "\n", v)) for k, v in r_in.items() if v is not None}

        name = r.pop("name")

        dn, dn_disable = r.pop("dn_string"), int(r.pop("dn_disable"))
        if name in users:
            if not dn_disable:
                dns = users[name]["ContactInformation"].get("DNs", [])
                dns.append(dn)
                users[name]["ContactInformation"]["DNs"] = dns
            continue
        if not dn_disable:
            r["DNs"] = [dn]

        if r["ContactPreference"] == r["Profile"]:
            del r["ContactPreference"]

        for k in list(r):
            if r[k] in ["", "---", "NULL", "1-234-567-8900_CHANGE_THIS"]:
                del r[k]

        r["ID"] = email_to_id(r["PrimaryEmail"])

        contact_info = {}
        for k in ["PrimaryEmail", "SecondaryEmail", "PrimaryPhone",
                  "SecondaryPhone", "IM", "DNs", "ContactPreference",
                  "SMSAddress"]:
            if k in r:
                contact_info[k] = r.pop(k)
        r["ContactInformation"] = contact_info

        users[name] = r

    if args.outfile:
        anymarkup.serialize_file(users, args.outfile)
    else:
        print(anymarkup.serialize(users, "yaml").decode())

    return 0

sys.exit(main())

