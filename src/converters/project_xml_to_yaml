#!/usr/bin/env python3
from argparse import ArgumentParser, FileType
import os
import sys
import xmltodict
import yaml


# Multiline string to look nicer
def str_presenter(dumper, data):
    if len(data.splitlines()) > 1:  # check for multiline string
        return dumper.represent_scalar('tag:yaml.org,2002:str', data, style='|')
    return dumper.represent_scalar('tag:yaml.org,2002:str', data)

yaml.add_representer(str, str_presenter)


def main(argv=sys.argv):
    parser = ArgumentParser()
    parser.add_argument("infile", type=FileType('r'), help="input miscproject xml file")
    parser.add_argument("outdir", help="output yaml directory tree")
    args = parser.parse_args(argv[1:])

    # Use dict_constructor=dict so we don't get ordered dicts, we don't really care about ordering
    parsed = xmltodict.parse(args.infile.read(), dict_constructor=dict)

    if os.path.exists(args.outdir):
        print("Warning: %s already exists" % args.outdir, file=sys.stderr)
    else:
        os.mkdir(args.outdir)

    for project in parsed['Projects']['Project']:
        outfile = os.path.join(args.outdir, project["Name"] + ".yaml")
        serialized = yaml.safe_dump(project, encoding='utf-8', default_flow_style=False)
        with open(outfile, 'w') as f:
            f.write(serialized.decode())

    return 0


if __name__ == '__main__':
    sys.exit(main(sys.argv))
